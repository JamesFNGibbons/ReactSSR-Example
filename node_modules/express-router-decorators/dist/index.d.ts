/// <reference types="express" />
import * as express from 'express';
export declare type HttpMethods = 'all' | 'get' | 'post' | 'put' | 'head' | 'delete' | 'options' | 'trace' | 'copy' | 'lock' | 'mkcol' | 'move' | 'purge' | 'propfind' | 'proppatch' | 'unlock' | 'report' | 'mkactivity' | 'checkout' | 'merge' | 'm-search' | 'notify' | 'subscribe' | 'unsubscribe' | 'patch' | 'search' | 'connect' | 'GET' | 'POST' | 'PUT' | 'HEAD' | 'DELETE' | 'OPTIONS' | 'TRACE' | 'COPY' | 'LOCK' | 'MKCOL' | 'MOVE' | 'PURGE' | 'PROPFIND' | 'PROPPATCH' | 'UNLOCK' | 'REPORT' | 'MKACTIVITY' | 'CHECKOUT' | 'MERGE' | 'M-SEARCH' | 'NOTIFY' | 'SUBSCRIBE' | 'UNSUBSCRIBE' | 'PATCH' | 'SEARCH' | 'CONNECT';
export declare function Root(rootRoute: string): (target: any) => void;
export declare function Path(pathRoute: string | RegExp, httpMethod?: HttpMethods): (target: any, propertyKey: string) => void;
export declare function Use(target: any, propertyKey: string): void;
/**
 * Attaches the router controllers to the main express application instance.
 * @param app - express application instance (result of call to `express()`)
 * @param controllers - controller classes decorated with @Root and @Path/@Use
 */
export declare function bindControllers(app: express.Express, ...controllers: Function[]): void;
